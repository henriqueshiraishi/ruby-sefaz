# frozen_string_literal: true

require "test_helper"

class SEFAZ::Utils::TestSigner < Minitest::Test

  def setup
    cert = File.read("certs/client.pfx")
    pass = "1234"
    @pkcs12 = OpenSSL::PKCS12.new(cert, pass)
  end

  def test_if_the_sign_is_wokring
    xml_unsigned = '<NFe><infNFe Id="NFe35221221684155000164550010000002361125429343"></infNFe></NFe>'
    doc = SEFAZ::Utils::Signer.new(xml_unsigned)
    doc.sign!(@pkcs12.certificate, @pkcs12.key)
    xml = doc.to_xml
    assert_equal xml, '<NFe><infNFe Id="NFe35221221684155000164550010000002361125429343"></infNFe><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"></SignatureMethod><Reference URI="#NFe35221221684155000164550010000002361125429343"><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"></Transform><Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>651Y4oR2GTkXoHb0xyQoX142Nfw=</DigestValue></Reference></SignedInfo><SignatureValue>aCBtIaQBKNLVpN3Rj17qfaNlACz+YKfN/tzEtZFmigzniuPPMx8D5g4Kqx2ipuidZmu9iMYov9GLFA1ZadEwSzkf/Q+Q1cxZ7gLML8fBVKxK3owiLT7MAkJwNUoYHiVGmHykT2VA3BzBMypX6tpdo9+O1p36q/jXrt2G/xy3zyM0UFXKntDfpwbxyFEgBO04xE+ruFHiZmZYqvDjo8yzoWUxaeId3fMxtx/ZKqrBTtrwPMAMbY5G/my9s7Wj3XwdiJeTM11FWH42aeK5lzVtJa3w9hd5/zme3EUOZblpQrNLz45+V7T2u27vXNbtOwVdboTq9XdEQZN9WwJXD0/GPQ==</SignatureValue><KeyInfo><X509Data><X509Certificate>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</X509Certificate></X509Data></KeyInfo></Signature></NFe>'
  end

end
